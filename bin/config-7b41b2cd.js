import { _ as _typeof, a as _asyncToGenerator, b as _toArray, c as cwd, d as _objectSpread2 } from './init.js';
import { normalize, join, sep } from 'path';
import fs from 'fs';
import 'os';
import 'child_process';
import 'draftlog';

var createDir = (function(directory){var directorys=[];if(typeof directory==="string")directorys.push(directory);else if(_typeof(directory)==="object")Object.assign(directorys,directory);directorys.forEach(function(dir){dir=normalize(dir);if(!fs.existsSync(dir))fs.mkdirSync(dir,{recursive:true});});});

var setConfig=function(){var _ref=_asyncToGenerator(function*(){var _args$,_output$ftp,_output$ftp2,_output$ftp2$start,_output$ftp3,_output$ftp3$start,_output$ftp4,_output$ftp4$start,_output$ftp4$start$ho,_output$ftp5,_output$ftp5$start,_output$ftp6,_output$ftp6$start,_output$ftp6$start$us,_output$ftp7,_output$ftp7$start,_output$ftp8,_output$ftp8$start,_output$ftp8$start$pa,_output$ftp9,_output$ftp9$start,_output$ftp10,_output$ftp10$start,_output$build;var _process$argv=_toArray(process.argv),args=_process$argv.slice(2);var arg=((_args$=args[0])===null||_args$===void 0?void 0:_args$.replace(/-/g,""))||"start";var config=yield import(join("./".concat(cwd),".swrc.js"));var output=_objectSpread2(_objectSpread2({},{}),config["default"]);var isValid=function isValid(arr){return !arr.some(function(validation){return validation===false})};var validations={ftp:[!!(output!==null&&output!==void 0&&output.ftp),!!(output!==null&&output!==void 0&&(_output$ftp=output.ftp)!==null&&_output$ftp!==void 0&&_output$ftp.start),typeof(output===null||output===void 0?void 0:(_output$ftp2=output.ftp)===null||_output$ftp2===void 0?void 0:(_output$ftp2$start=_output$ftp2.start)===null||_output$ftp2$start===void 0?void 0:_output$ftp2$start.root)==="string",typeof(output===null||output===void 0?void 0:(_output$ftp3=output.ftp)===null||_output$ftp3===void 0?void 0:(_output$ftp3$start=_output$ftp3.start)===null||_output$ftp3$start===void 0?void 0:_output$ftp3$start.host)==="string"&&(output===null||output===void 0?void 0:(_output$ftp4=output.ftp)===null||_output$ftp4===void 0?void 0:(_output$ftp4$start=_output$ftp4.start)===null||_output$ftp4$start===void 0?void 0:(_output$ftp4$start$ho=_output$ftp4$start.host)===null||_output$ftp4$start$ho===void 0?void 0:_output$ftp4$start$ho.trim().length)>0,typeof(output===null||output===void 0?void 0:(_output$ftp5=output.ftp)===null||_output$ftp5===void 0?void 0:(_output$ftp5$start=_output$ftp5.start)===null||_output$ftp5$start===void 0?void 0:_output$ftp5$start.user)==="string"&&(output===null||output===void 0?void 0:(_output$ftp6=output.ftp)===null||_output$ftp6===void 0?void 0:(_output$ftp6$start=_output$ftp6.start)===null||_output$ftp6$start===void 0?void 0:(_output$ftp6$start$us=_output$ftp6$start.user)===null||_output$ftp6$start$us===void 0?void 0:_output$ftp6$start$us.trim().length)>0,typeof(output===null||output===void 0?void 0:(_output$ftp7=output.ftp)===null||_output$ftp7===void 0?void 0:(_output$ftp7$start=_output$ftp7.start)===null||_output$ftp7$start===void 0?void 0:_output$ftp7$start.pass)==="string"&&(output===null||output===void 0?void 0:(_output$ftp8=output.ftp)===null||_output$ftp8===void 0?void 0:(_output$ftp8$start=_output$ftp8.start)===null||_output$ftp8$start===void 0?void 0:(_output$ftp8$start$pa=_output$ftp8$start.pass)===null||_output$ftp8$start$pa===void 0?void 0:_output$ftp8$start$pa.trim().length)>0,(output===null||output===void 0?void 0:(_output$ftp9=output.ftp)===null||_output$ftp9===void 0?void 0:(_output$ftp9$start=_output$ftp9.start)===null||_output$ftp9$start===void 0?void 0:_output$ftp9$start.secure)==="explict"||(output===null||output===void 0?void 0:(_output$ftp10=output.ftp)===null||_output$ftp10===void 0?void 0:(_output$ftp10$start=_output$ftp10.start)===null||_output$ftp10$start===void 0?void 0:_output$ftp10$start.secure)===true]};if(!isValid(validations.ftp)){output.ftp={start:{root:"",host:"",user:"",pass:"",secure:""}};}var source=normalize(output.workspaces.src.replace("./",""));var to=normalize(output.workspaces.dist.replace("./",""));var required=normalize(".library/");if(source.substring(source.length-1,source.length)===sep)source=source.substring(0,source.length-1);if(to.substring(to.length-1,to.length)===sep)to=to.substring(0,to.length-1);if(required.substring(required.length-1,required.length)===sep)required=required.substring(0,required.length-1);var dev={ftp:output.ftp.start};var dist={ftp:output.ftp.build};var process_files=arg==="build"&&output!==null&&output!==void 0&&(_output$build=output.build)!==null&&_output$build!==void 0&&_output$build.compile?output.build.compile:output.start.compile;var build=(output===null||output===void 0?void 0:output.build)||false;var plugins=(output===null||output===void 0?void 0:output.plugins)||false;var options=(output===null||output===void 0?void 0:output.options)||false;var blacklist=output.hasOwnProperty("blacklist")?output.blacklist:[]||[];process_files.js.require=required;createDir([source,to,required]);return {source:source,to:to,dev:dev,dist:dist,process_files:process_files,build:build,options:options,plugins:plugins,blacklist:blacklist}});return function setConfig(){return _ref.apply(this,arguments)}}();var _await$setConfig=await setConfig(),source=_await$setConfig.source,to=_await$setConfig.to,dev=_await$setConfig.dev,dist=_await$setConfig.dist,process_files=_await$setConfig.process_files,build=_await$setConfig.build,options=_await$setConfig.options,plugins=_await$setConfig.plugins,blacklist=_await$setConfig.blacklist;

export { blacklist, build, dev, dist, options, plugins, process_files, source, to };
